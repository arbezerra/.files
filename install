#!/usr/bin/env zsh
# I am using zsh instead of bash.  I was having some troubles using bash with
# arrays.  Didn't want to investigate, so I just did zsh

# Workspace
mkdir -p $HOME/{workspace,ufcg,mestrado}

# Install oh-my-zsh
if [ ! -d ~/.oh-my-zsh ]
then
  echo "Install oh my zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi

if [ ! -d ~/.oh-my-zsh/custom/themes/powerlevel10k ]
then
  echo "Install powerlevel10k"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
fi

if [ ! -d ~/.asdf ]
then
    echo "Install asdf"
    git clone git@github.com:asdf-vm/asdf.git ~/.asdf --branch v0.13.1
fi

# Build nvim
if ! command -v nvim &> /dev/null
then
  echo "Install nvim"
  git clone git@github.com:neovim/neovim.git build/nvim
  CMAKE_BUILD_TYPE=Release cd $DOTFILES/build/nvim && git checkout stable && make && sudo make install
fi

# Install packer
if [ ! -d ~/.local/share/nvim/site/pack/packer/start/packer.nvim ]
then
    echo "Install packer"
    git clone --depth 1 https://github.com/wbthomason/packer.nvim  ~/.local/share/nvim/site/pack/packer/start/packer.nvim
fi

# Backup zshrc
if [ ! -L ~/.zshrc ] && [ -f ~/.zshrc ]
then
  echo "Backup .zshrc"
  mv ~/.zshrc ~/.zshrc.bak
fi

pushd $DOTFILES
for folder in $(echo $STOW_FOLDERS | sed "s/,/ /g")
do
    echo "stow $folder"
    stow -D $folder
    stow $folder
done
popd
